name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        include:
          - os: macos-latest
            platform: darwin
            arch: x64
          - os: macos-latest
            platform: darwin
            arch: arm64
          - os: windows-latest
            platform: win32
            arch: x64
          - os: ubuntu-latest
            platform: linux
            arch: x64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build for macOS (Intel)
      if: matrix.platform == 'darwin' && matrix.arch == 'x64'
      run: npm run build -- --mac --x64
      env:
        CSC_IDENTITY_AUTO_DISCOVERY: false
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Build for macOS (Apple Silicon)
      if: matrix.platform == 'darwin' && matrix.arch == 'arm64'
      run: npm run build -- --mac --arm64
      env:
        CSC_IDENTITY_AUTO_DISCOVERY: false
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Build for Windows
      if: matrix.platform == 'win32'
      run: npm run build -- --win --x64
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Build for Linux
      if: matrix.platform == 'linux'
      run: npm run build -- --linux --x64
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Upload macOS Intel artifacts
      if: matrix.platform == 'darwin' && matrix.arch == 'x64'
      uses: actions/upload-artifact@v4
      with:
        name: smartren-macos-x64
        path: dist/*.dmg

    - name: Upload macOS Apple Silicon artifacts
      if: matrix.platform == 'darwin' && matrix.arch == 'arm64'
      uses: actions/upload-artifact@v4
      with:
        name: smartren-macos-arm64
        path: dist/*.dmg

    - name: Upload Windows artifacts
      if: matrix.platform == 'win32'
      uses: actions/upload-artifact@v4
      with:
        name: smartren-windows-x64
        path: dist/*.exe

    - name: Upload Linux artifacts
      if: matrix.platform == 'linux'
      uses: actions/upload-artifact@v4
      with:
        name: smartren-linux-x64
        path: dist/*.AppImage

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: SmartRen ${{ github.ref_name }}
        body: |
          ## SmartRen ${{ github.ref_name }}
          
          ### What's New
          - üåç Multi-language support (11 languages)
          - üîß GitHub Actions CI/CD fixes
          - üé® Consistent icon design across platforms
          - üîî Beautiful notification system
          - üì± Standalone executable with no external dependencies
          
          ### Features
          - üé¨ Automatic TV series detection
          - ‚úèÔ∏è Manual entry option
          - üîë User API key management
          - üì∫ Season and episode selection
          - üéØ Plex-compatible naming
          - üîÑ Smart file sorting
          - üåç Multi-language content support
          
          ### Installation
          1. Download the appropriate file for your operating system
          2. Run the installer
          3. Get your free TMDB API key from https://www.themoviedb.org/settings/api
          4. Start organizing your media files!
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
